from utils import *
from chainquery  import query, queries

# Constants
TEST_ID = 'ce5997c1e58faf16a4f18e8f9f9342a853a1499d'
STREAM_API = "https://cdn.lbryplayer.xyz/api/v3/streams/free/"

# Autogenerated name: { Language }_{ ID }
# -- ID: claim id
# -- Language: RFC 5646
# Example: en-US_ce5997c1e58faf16a4f18e8f9f9342a853a1499d

def make_entry(entry, lang):
    return {
      "lang_tag": lang.language,
      "lang_name": lang.language_name().lower(),
      "lang_native_name": lang.autonym().lower(),
      "track_id": entry['claim_id'],
      "track_kind": "subtitle",
      # "verified": False,
      # "source_url": STREAM_API + entry["name"] + "/" + entry["claim_id"] + "/test",
      # "source_type": "community",
      "transcriber": entry['publisher_id']
    }

mime_type = "application/x-ext-vtt"

def searchTextTracks(claim_id, channel_id, lang):
    filtered = []
    # Get all text tracks for this claim
    results = query(
        queries.getStreamClaim(claim_id, channel_id, mime_type, lang)
    )
    # If tracks exists:
    if results:
        for i, entry in enumerate(results):
            if validate_name(entry, claim_id):
                language = Language.get(entry['language'])
                if validate_language(language):
                    # Add entry to new list
                    filtered.append(make_entry(entry, language))
    # return filtered list for better results
    return filtered
